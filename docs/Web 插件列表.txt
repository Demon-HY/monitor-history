########################################################################################
1. jQuery
########################################################################################
2. require.js
########################################################################################
3. sea.js
文档: http://seajs.org/docs/#docs
用法:
<script type="text/javascript" src="statics/scripts/sea.js"></script>
<script type="text/javascript">
    window.i18n = new Lang();
    i18n.loadPack('./locales/');
    seajs.config({
        debug: false,
        base: "./modules/",
        alias: {
            "config": '../../config',
            "util": '../base/util',
            'Handlebars': '../../statics/scripts/handlebars.min',
            'helper': '../base/helper'
        },
        map: [
            ['.js', '.js?v=@@version']
        ]
    });
    seajs.use('console/main');
</script>
########################################################################################
4. handlebars.js
文档: http://www.ghostchina.com/introducing-the-handlebars-js-templating-engine/
作用: 模板引擎
########################################################################################
5. highcharts.js
作用: 纯 js 实现的图表库
文档: http://api.hcharts.cn/highcharts
########################################################################################
6. i18n.js
作用: 多语言国际化
########################################################################################
7. json2.js
作用: 提供 json 的序列化和反序列化

7.1 序列化
var jsonObj = { id: '01', name: 'Tom' };    JSON.stringify(jsonObj);

7.2 反序列化
var jsonString = "{ id: '01', name: 'Tom' }";   JSON.parse(jsonString);
########################################################################################
8. 表格控件
flexigrid.js
flexigrid.css

8.1 特性：
* 列可伸缩
* 高度可调整
* 可按照表头排序
* 很酷的外观风格
* 能够转换一个普通的表格
* 可以连接到一个ajax方式的数据源（仅是xml格式）
* 分页功能
* 显示/隐藏 列
* 提供可供外部访问的API

8.2 参数
$("#flex1").flexigrid({
    height: 200,        //flexigrid插件的高度，单位为px
    width: 'auto',      //宽度值，auto表示根据每列的宽度自动计算，在IE6下建议设置具体值否则会有问题
    striped: true,      //是否显示斑纹效果，默认是奇偶交互的形式
    novstripe: false,   //没用过这个属性
    minwidth: 30,       //列的最小宽度
    minheight: 80,      //列的最小高度
    resizable: false,   //resizable table是否可伸缩
    url: false,         //ajax url,ajax方式对应的url地址
    method: 'POST',     // data sending method,数据发送方式
    dataType: 'json',   // type of data loaded,数据加载的类型，xml,json
    errormsg: '发生错误', //错误提升信息
    usepager: false,    //是否分页
    nowrap: true,       //是否不换行
    page: 1,            //current page,默认当前页
    total: 1,           //total pages,总页面数
    useRp: true,        //use the results per page select box,是否可以动态设置每页显示的结果数
    rp: 25,             // results per page,每页默认的结果数
    rpOptions: [10, 15, ...], //可选择设定的每页结果数
    title: false,       //是否包含标题
    pagestat: '显示记录从{from}到{to}，总数 {total} 条', //显示当前页和总页面的样式
    procmsg: '正在处理数据，请稍候 ...', //正在处理的提示信息
    query: '',          //搜索查询的条件
    qtype: '',          //搜索查询的类别
    qop: "Eq",          //搜索的操作符
    nomsg: '没有符合条件的记录存在', //无结果的提示信息
    minColToggle: 1,    //允许显示的最小列数
    showToggleBtn: true, //是否允许显示隐藏列，该属性有bug设置成false点击头脚本报错。
    hideOnSubmit: true, //是否在回调时显示遮盖
    showTableToggleBtn: false, //是否显示【显示隐藏Grid】的按钮
    autoload: true,     //自动加载，即第一次发起ajax请求
    blockOpacity: 0.5,  //透明度设置
    onToggleCol: false, //当在行之间转换时，可在此方法中重写默认实现，基本无用
    onChangeSort: false, //当改变排序时，可在此方法中重写默认实现，自行实现客户端排序
    onSuccess: false,   //成功后执行
    onSubmit: false,    // 调用自定义的计算函数，基本没用
    //Style
    gridClass: "bbit-grid"//样式
});


########################################################################################
########################################################################################
########################################################################################
########################################################################################
########################################################################################
########################################################################################
########################################################################################
########################################################################################
########################################################################################
########################################################################################
########################################################################################